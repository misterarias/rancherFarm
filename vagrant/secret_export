#!/bin/false
# This file is needed so that none of these secret variables ever make it to the code repository

error() {
  echo "[ERROR] $@"
}

success() {
  echo "[OK] $@"
}

export.common() {
  :
}

export.provider() {
  local provider=${1:-}
  case "$provider" in
    aws)
      # AMAZON CREDENTIALS: we retrieve the active profile credentials by querying aws
      # itself, but we can optionally provide our own using an environment variable.
      if [ -f "$AWS_CREDENTIALS_FILE" ] ; then
        AWS_SECRET_KEY=$(grep aws_secret_access_key < "${AWS_CREDENTIALS_FILE}" | awk '{print $3}')
        AWS_ACCESS_KEY=$(grep aws_access_key_id < "${AWS_CREDENTIALS_FILE}" | awk '{print $3}')
      else
        AWS_SECRET_KEY=$(aws configure get aws_secret_access_key)
        AWS_ACCESS_KEY=$(aws configure get aws_access_key_id)
      fi

      if [ -z "${AWS_SECRET_KEY}" ] || [ -z "${AWS_ACCESS_KEY}" ] ; then
        error "Amazon credentials missing: execute 'aws configure' or make sure that a valid '${AWS_CREDENTIALS_FILE}' file exists"
      else
        export AWS_SECRET_KEY
        export AWS_ACCESS_KEY

        success "Amazon credentials correctly setup"
      fi
      ;;
    virtualbox|*)
      ;;
  esac
}

export.common
export.provider "$1"

# vim:ft=sh
